// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Runtime.CompilerServices;
using Microsoft.EntityFrameworkCore.ChangeTracking.Internal;

namespace OrdersLibrary.Models;

public partial class Orders : INotifyPropertyChanged
{
    private DateOnly? _orderDate;
    private TimeOnly? _orderTime;
    private bool? _orderIsNew;

    /// <summary>
    /// Primary key
    /// </summary>
    public int Id { get; set; }

    /// <summary>
    /// Date of order
    /// </summary>
    public DateOnly? OrderDate
    {
        get => _orderDate;
        set
        {
            if (Nullable.Equals(value, _orderDate)) return;
            _orderDate = value;
            OnPropertyChanged();
        }
    }

    /// <summary>
    /// Time of order
    /// </summary>
    public TimeOnly? OrderTime
    {
        get => _orderTime;
        set
        {
            if (Nullable.Equals(value, _orderTime)) return;
            _orderTime = value;
            OnPropertyChanged();
        }
    }

    public bool? OrderIsNew
    {
        get => _orderIsNew;
        set
        {
            if (value == _orderIsNew) return;
            _orderIsNew = value;
            OnPropertyChanged();
        }
    }

    public override string ToString() => $"{Id} {OrderDate} {OrderTime}";

    public event PropertyChangedEventHandler PropertyChanged;
    protected virtual void OnPropertyChanged([CallerMemberName] string propertyName = null)
    {
        PropertyChanged?.Invoke(this, new PropertyChangedEventArgs(propertyName));
    }
}